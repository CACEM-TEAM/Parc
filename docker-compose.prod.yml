services:
  # Base de donn√©es MySQL
  mysql:
    image: mysql:8.0
    container_name: parcauto_mysql_prod
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - mysql_data_prod:/var/lib/mysql
      - ./dbappparcauto.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - parcauto_network_prod
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # phpMyAdmin (optionnel en production)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: parcauto_phpmyadmin_prod
    restart: unless-stopped
    environment:
      PMA_HOST: ${PMA_HOST}
      PMA_PORT: 3306
      PMA_USER: ${PMA_USER}
      PMA_PASSWORD: ${PMA_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "${PHPMYADMIN_PORT}:80"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - parcauto_network_prod
    profiles:
      - admin

  # Backend API
  backend:
    build:
      context: ./Back
      dockerfile: Dockerfile
    container_name: parcauto_backend_prod
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV}
      PORT: ${PORT}
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_PORT: 3306
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN}
      CORS_ORIGIN: ${CORS_ORIGIN}
    ports:
      - "${BACKEND_PORT}:4501"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - parcauto_network_prod
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4501/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Vue.js
  frontend:
    build:
      context: ./Front
      dockerfile: Dockerfile.prod
    container_name: parcauto_frontend_prod
    restart: unless-stopped
    environment:
      VITE_API_URL: ${VITE_API_URL}
    ports:
      - "${FRONTEND_PORT}:3001"
    depends_on:
      - backend
    networks:
      - parcauto_network_prod
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

volumes:
  mysql_data_prod:
    driver: local

networks:
  parcauto_network_prod:
    driver: bridge 